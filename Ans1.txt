--Time taking process as BULK BINDING is not used.
-- Created on 26-02-2025 by USER 
--CREATE THE TAB1 TABLE first (CREATE TABLE tab1 (SLNO int, PACKAGE_NAME Varchar2(100), PACKAGE_BODY_NAME VARCHAR2(100),PROC_NAME VARCHAR2(100), FUN_NAME VARCHAR2(100), CODE CLOB))
-- then run below script--
declare 
  -- Local variables here
  i integer;
  v_pack_clob CLOB;
  v_num int:=1;
begin
  --make sure tab1 table is not present(you cannot use it here because created table of this scriot is not valid at the runtime of this script)
  --execute immediate 'CREATE TABLE tab1 (SLNO int, PACKAGE_NAME Varchar2(100), PACKAGE_BODY_NAME VARCHAR2(100),PROC_NAME VARCHAR2(100), FUN_NAME VARCHAR2(100), CODE CLOB)';
  FOR I IN (SELECT distinct name,type FROM all_source where 
    TYPE IN ('PACKAGE BODY','PACKAGE','FUNCTION','PROCEDURE') AND OWNER = 'SSS' and OWNER = 'SSS' --and name = 'TIC_DOCUMENTS'
    order by TYPE
     )
    LOOP
    IF i.type = 'PACKAGE' THEN 
      --v_pack_clob:= SELECT DBMS_METADATA.GET_DDL('PACKAGE', NAME, 'SSS') FROM DUAL; 
       SELECT DBMS_METADATA.GET_DDL('PACKAGE', i.NAME, 'SSS') INTO v_pack_clob FROM DUAL; 
    ELSIF i.type = 'PACKAGE BODY' THEN 
      --v_pack_clob:= SELECT DBMS_METADATA.GET_DDL('PACKAGE_BODY', NAME, 'SSS') FROM DUAL;
      SELECT DBMS_METADATA.GET_DDL('PACKAGE_BODY', i.NAME, 'SSS') INTO v_pack_clob FROM DUAL;
    ELSIF i.type = 'FUNCTION' THEN 
      --v_pack_clob:= SELECT DBMS_METADATA.GET_DDL('PACKAGE', NAME, 'SSS') FROM DUAL; 
       SELECT DBMS_METADATA.GET_DDL('FUNCTION', i.NAME, 'SSS') INTO v_pack_clob FROM DUAL; 
    ELSIF i.type = 'PROCEDURE' THEN 
      --v_pack_clob:= SELECT DBMS_METADATA.GET_DDL('PACKAGE', NAME, 'SSS') FROM DUAL; 
       SELECT DBMS_METADATA.GET_DDL('PROCEDURE', i.NAME, 'SSS') INTO v_pack_clob FROM DUAL; 
    END IF;
    IF v_pack_clob is not null then
      BEGIN
        INSERT INTO tab1(slno,package_name,package_body_name,proc_name, fun_name, code) 
        VALUES
         (v_num, 
          CASE WHEN i.type = 'PACKAGE' THEN i.NAME ELSE 'NA' END,
          CASE WHEN i.type = 'PACKAGE BODY' THEN i.NAME ELSE 'NA' END, 
          CASE WHEN i.type = 'PROCEDURE' THEN i.NAME ELSE 'NA' END,
          CASE WHEN i.type = 'FUNCTION' THEN i.NAME ELSE 'NA' END,
          v_pack_clob  );
         COMMIT;
       EXCEPTION WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('ERROR IN PACKAGE '||' '|| i.name);
       ROLLBACK;
       END;
       v_num :=v_num+1;
     END IF; 
     END LOOP;
end; 
--------
/*
SELECT *--,TEXT 
FROM ALL_SOURCE  --SELECT COUNT(*), TYPE FROM ALL_SOURCE GROUP BY TYPE,OWNER HAVING OWNER = 'SSS' 
WHERE --NAME = 'YOUR_PACKAGE_NAME' 
--AND
 TYPE IN ('PACKAGE BODY','PACKAGE') AND OWNER = 'SSS'
ORDER BY LINE; 

SELECT DBMS_METADATA.GET_DDL('PACKAGE', 'TIC_DOCUMENTS', 'SSS') FROM DUAL;   
SELECT DBMS_METADATA.GET_DDL('PACKAGE_BODY', 'TIC_DOCUMENTS', 'SSS') FROM DUAL;  

CREATE TABLE tab1 (SLNO int, PACKAGE_NAME Varchar2(100), PACKAGE_BODY_NAME VARCHAR2(100), CODE CLOB);
*/
